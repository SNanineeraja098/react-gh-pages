name: Node.js & React CI/CD to EC2

on:
  push:
    branches: [main]

env:
  AWS_EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
  AWS_EC2_USER: ${{ secrets.AWS_EC2_USER }}
  AWS_EC2_PORT: ${{ secrets.AWS_EC2_PORT || '22' }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Build React app
        run: |
          npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build React app
        run: |
          npm run build
          
      # SSH Setup with Robust Key Handling
      - name: Create SSH Key File
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_EC2_SSH_KEY }}" > ~/.ssh/ec2_key
          chmod 600 ~/.ssh/ec2_key
          cat ~/.ssh/ec2_key | ssh-keygen -y -f /dev/stdin > ~/.ssh/ec2_key.pub
          
      - name: Test SSH Connection
        run: |
          ssh -vvv -o StrictHostKeyChecking=no \
              -o UserKnownHostsFile=/dev/null \
              -i ~/.ssh/ec2_key \
              -p ${{ env.AWS_EC2_PORT }} \
              ${{ env.AWS_EC2_USER }}@${{ env.AWS_EC2_HOST }} \
              "echo 'SSH connection successful!'"
              
      # Deployment Commands
      - name: Deploy Application
        run: |
          ssh -i ~/.ssh/ec2_key \
              -p ${{ env.AWS_EC2_PORT }} \
              ${{ env.AWS_EC2_USER }}@${{ env.AWS_EC2_HOST }} << 'EOF'
          # Create backup
          sudo rm -rf /var/www/html_backup
          sudo cp -r /var/www/html /var/www/html_backup || true
          
          # Prepare new version
          TEMP_DIR=$(mktemp -d)
          git clone https://github.com/${{ github.repository }}.git $TEMP_DIR
          
          # Install and build
          cd $TEMP_DIR
          npm ci
          cd client
          npm ci
          npm run build
          
          # Deploy to production
          sudo rm -rf /var/www/html/*
          sudo cp -r build/* /var/www/html/
          
          
          # Cleanup
          rm -rf $TEMP_DIR
          
          # Restart Apache
          sudo systemctl restart apache2
          EOF
          
      # Verification
      - name: Verify Deployment
        run: |
          ssh -i ~/.ssh/ec2_key \
              ${{ env.AWS_EC2_USER }}@${{ env.AWS_EC2_HOST }} \
              "curl -sI http://localhost | grep '200 OK' && \
               curl -sI http://localhost:3000/api | grep '200 OK'"
